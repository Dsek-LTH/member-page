version: "3"
services:
  database:
    image: "postgres:${POSTGRES_VERSION}-alpine"
    networks:
      - local
    env_file: .env
    ports:
      - 5432:5432
  pgadmin:
    image: dpage/pgadmin4
    env_file: .env
    depends_on:
      - database
    ports:
      - 5050:80
  migrator:
    depends_on:
      - database
    build:
      context: .
    env_file: .env
    networks:
      - local
  core:
    depends_on:
      - database
    build:
      context: .
    env_file: .env
    networks:
      - local
  news:
    depends_on:
      - database
    build:
      context: .
    env_file: .env
    networks:
      - local
  song_archive:
    depends_on:
      - database
    build:
      context: .
    env_file: .env
    networks:
      - local
  calendar:
    depends_on:
      - database
    build:
      context: .
    env_file: .env
    networks:
      - local
  booking:
    depends_on:
      - database
    build:
      context: .
    env_file: .env
    networks:
      - local
  search:
    image: getmeili/meilisearch:v0.25.0
    depends_on:
      - database
    restart: always
    env_file:
      - .env
    volumes:
      - "meilidata:/data.ms"
    networks:
      - local
    ports:
      - 7700:7700
  file_handler:
    depends_on:
      - database
    build:
      context: .
    restart: always
    env_file: .env
    networks:
      - local
  gateway:
    build:
      context: .
    ports:
      - "4000:4000"
    networks:
      - local
    depends_on:
      - core
      - news
      - calendar
      - booking
      - database
      - song_archive
      - file_handler
      - search
    env_file: .env
    environment:
      SERVICE_URL_0: http://core:4000/
      SERVICE_NAME_0: core
      SERVICE_URL_1: http://news:4000/
      SERVICE_NAME_1: news
      SERVICE_URL_2: http://calendar:4000/
      SERVICE_NAME_2: calendar
      SERVICE_URL_3: http://booking:4000/
      SERVICE_NAME_3: booking
      SERVICE_URL_4: http://song_archive:4000/
      SERVICE_NAME_4: song_archive
      SERVICE_URL_5: http://file_handler:4000/
      SERVICE_NAME_5: file_handler
  frontend:
    build:
      context: .
    ports:
      - "3000:3000"
    depends_on:
      - gateway
    env_file: .env
  autoheal:
    restart: always
    image: willfarrell/autoheal
    environment:
      - AUTOHEAL_CONTAINER_LABEL=all
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
volumes:
  meilidata:
networks:
  local:
    driver: bridge
