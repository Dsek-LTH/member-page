version: '3'
services:
  database:
    image: 'postgres:${POSTGRES_VERSION}-alpine'
    restart: always
    volumes:
      - "dbdata:/var/lib/postgres"
    networks:
      - local
    env_file: .env
    ports:
      - 5432:5432
  pgadmin:
    image: dpage/pgadmin4
    restart: always
    env_file: .env
    depends_on:
      - database
    ports:
      - 5050:80
  migrator:
    depends_on:
      - database
    build:
      context: .
    env_file: .env
    networks:
      - local
  core:
    depends_on:
      - database
    build:
      context: .
    restart: always
    env_file: .env
    networks:
      - local
  news:
    depends_on:
      - database
    build:
      context: .
    restart: always
    env_file: .env
    networks:
      - local
  calendar:
    depends_on:
      - database
    build:
      context: .
    restart: always
    env_file: .env
    networks:
      - local
  booking:
    depends_on:
      - database
    build:
      context: .
    restart: always
    env_file: .env
    networks:
      - local
  gateway:
    build:
      context: .
    restart: always
    ports:
      - '4000:4000'
    networks:
      - local
    depends_on:
      - core
      - news
      - calendar
      - booking
      - database
    env_file: .env
    environment:
      SERVICE_URL_0: http://core:4000/
      SERVICE_NAME_0: core
      SERVICE_URL_1: http://news:4000/
      SERVICE_NAME_1: news
      SERVICE_URL_2: http://calendar:4000/
      SERVICE_NAME_2: calendar
      SERVICE_URL_3: http://booking:4000/
      SERVICE_NAME_3: booking
  frontend:
    build:
      context: .
    restart: always
    ports:
      - '3000:3000'
    depends_on:
      - gateway
    env_file: .env
volumes:
  dbdata:
networks:
  local:
    driver: bridge