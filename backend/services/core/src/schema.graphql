extend type Query {
  me: Member
  members(filter: MemberFilter): [Member!]!
  memberById(id: Int!): Member
  memberByStudentId(student_id: String!): Member
  positions(filter: PositionFilter): [Position!]!
  committees(filter: CommitteeFilter): [Committee!]!
  mandates(filter: MandateFilter): [Mandate!]!
}

extend type Mutation {
  member: MemberMutations
  position: PositionMutations
  committee: CommitteeMutations
  mandate: MandateMutations
}

 type Member @key(fields: "id") {
  id: Int!
  student_id: String
  first_name: String
  nickname: String
  last_name: String
  class_programme: String
  class_year: Int
  picture_path: String
}

type Position @key(fields: "id") {
  id: Int!
  name: String
  committee: Committee
}

type Committee @key(fields: "id") {
  id: Int!
  name: String!
}

scalar Date

type Mandate {
  start: Date!
  end: Date!
  position: Position!
  member: Member!
}

input MemberFilter {
  id: Int
  student_id: String
  first_name: String
  nickname: String
  last_name: String
  class_programme: String
  class_year: Int
}

input CommitteeFilter {
  id: Int
  name: String
}

input PositionFilter {
  id: Int
  name: String
  committee_id: Int
}

input MandateFilter {
  position_id: Int
  member_id: Int
  start: Date
  end: Date
}

type MemberMutations {
  create(input: CreateMember!): Member
  update(id: Int!, input: UpdateMember!): Member
  remove(id: Int!): Member
}

type PositionMutations {
  create(input: CreatePosition!): Boolean
  update(id: Int!, input: UpdatePosition!): Boolean
  remove(id: Int!): Boolean
}

type CommitteeMutations {
  create(input: CreateCommittee!): Boolean
  update(id: Int!, input: UpdateCommittee!): Boolean
  remove(id: Int!): Boolean
}

type MandateMutations {
  create(input: CreateMandate): Mandate
  update(input: UpdateMandate): Mandate
  remove(input: RemoveMandate): Mandate
}

input CreateMember {
  student_id: String!
  first_name: String!
  nickname: String
  last_name: String!
  class_programme: String!
  class_year: Int!
  picture_path: String
}

input UpdateMember {
  first_name: String
  nickname: String
  last_name: String
  class_programme: String
  class_year: Int
  picture_path: String
}

input CreatePosition {
  name: String!
  committee_id: Int
}

input UpdatePosition {
  name: String
  committee_id: Int
}

input CreateCommittee {
  name: String!
}

input UpdateCommittee {
  name: String
}

input CreateMandate {
  positionId: Int!
  memberId: Int!
  start: Date!
  end: Date!
}

input UpdateMandate {
  positionId: Int!
  memberId: Int!
  start: Date
  end: Date
}

input RemoveMandate {
  positionId: Int!
  memberId: Int!
}