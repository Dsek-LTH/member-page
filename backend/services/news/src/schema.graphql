scalar Datetime
scalar Url

extend type Query {
  news(page: Int! = 0, perPage: Int! = 20): ArticlePagination
  article(id: Int!): Article
}

extend type Mutation {
  article: ArticleMutations,
}

type Article @key(fields: "id") {
  id: Int!
  body: String!
  body_en: String
  header: String!
  header_en: String
  author: Member!
  published_datetime: Datetime!
  image_url: Url
  latest_edit_datetime: Datetime
}

type PaginationInfo {
  totalPages: Int!
  totalItems: Int!
  page: Int!
  perPage: Int!
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
}

type ArticlePagination {
  articles: [Article]!
  pageInfo: PaginationInfo!
}

extend type Member @key(fields: "id") {
  id: Int! @external
}

type ArticleMutations {
  create(input: CreateArticle!): CreateArticlePayload
  update(id: Int!, input: UpdateArticle!): UpdateArticlePayload
  remove(id: Int!): RemoveArticlePayload
  presignedPutUrl(fileName: String!): String
}

type CreateArticlePayload {
  article: Article!,
  uploadUrl: Url,
}

type UpdateArticlePayload {
  article: Article!,
  uploadUrl: Url,
}

type RemoveArticlePayload {
  article: Article!,
}

input CreateArticle {
  header: String!,
  header_en: String,
  body: String!,
  body_en: String,
  image_name: String,
}

input UpdateArticle {
  header: String,
  header_en: String,
  body: String,
  body_en: String,
  image_name: String,
}
